@page
@model RazorPages_PRN222.Pages.Admin.QuizzesModel
@{
    ViewData["Title"] = "Manage Quizzes";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-3">
                <h2 class="mb-0">
                    <i class="fas fa-question-circle me-2"></i>Manage Quizzes
                </h2>
                <button class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#addQuizModal">
                    <i class="fas fa-plus me-1"></i>Add New Quiz
                </button>
            </div>

            <!-- Filters -->
            <div class="card mb-3">
                <div class="card-body p-3">
                    <div class="row g-2">
                        <div class="col-12 col-md-6 col-lg-4">
                            <label for="courseFilter" class="form-label small">Filter by Course:</label>
                            <select id="courseFilter" class="form-select form-select-sm" onchange="filterQuizzes()">
                                <option value="">All Courses</option>
                                @foreach (var course in Model.Courses)
                                {
                                    <option value="@course.CourseId">@course.Title</option>
                                }
                            </select>
                        </div>
                        <div class="col-12 col-md-6 col-lg-4">
                            <label for="lessonFilter" class="form-label small">Filter by Lesson:</label>
                            <select id="lessonFilter" class="form-select form-select-sm" onchange="filterQuizzes()">
                                <option value="">All Lessons</option>
                                @foreach (var lesson in Model.Lessons)
                                {
                                    <option value="@lesson.LessonId">@lesson.Title</option>
                                }
                            </select>
                        </div>
                        <div class="col-12 col-md-6 col-lg-4">
                            <label for="difficultyFilter" class="form-label small">Filter by Difficulty:</label>
                            <select id="difficultyFilter" class="form-select form-select-sm" onchange="filterQuizzes()">
                                <option value="">All Difficulties</option>
                                <option value="Easy">Easy</option>
                                <option value="Medium">Medium</option>
                                <option value="Hard">Hard</option>
                            </select>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Quizzes Table -->
            <div class="card">
                <div class="card-body p-3">
                    @if (!Model.Quizzes.Any())
                    {
                        <div class="text-center py-4">
                            <i class="fas fa-question-circle fa-2x text-muted mb-2"></i>
                            <h5>No quizzes yet</h5>
                            <p class="text-muted">Create your first quiz to get started.</p>
                            <button class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#addQuizModal">
                                <i class="fas fa-plus me-1"></i>Add First Quiz
                            </button>
                        </div>
                    }
                    else
                    {
                        <div class="table-responsive">
                            <table class="table table-hover table-sm">
                                <thead class="table-dark">
                                    <tr>
                                        <th>Title</th>
                                        <th>Course</th>
                                        <th>Lesson</th>
                                        <th>Time Limit</th>
                                        <th>Pass Score</th>
                                        <th>Max Attempts</th>
                                        <th>Questions</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var quiz in Model.Quizzes.OrderBy(q => q.Lesson.CourseId).ThenBy(q => q.Lesson.SortOrder))
                                    {
                                        <tr data-course-id="@quiz.Lesson.CourseId" data-lesson-id="@quiz.LessonId">
                                            <td>
                                                <strong>@quiz.Title</strong>
                                                @if (!string.IsNullOrEmpty(quiz.Description))
                                                {
                                                    <br>
                                        
                                                    <small class="text-muted">@(quiz.Description.Length > 40 ? quiz.Description.Substring(0, 40) + "..." : quiz.Description)</small>
                                                }
                                            </td>
                                            <td>@(quiz.Lesson?.Course?.Title ?? "Unknown Course")</td>
                                            <td>@(quiz.Lesson?.Title ?? "Unknown Lesson")</td>
                                            <td>@(quiz.TimeLimit?.ToString() ?? "No limit") min</td>
                                            <td>@(quiz.PassingScore?.ToString() ?? "N/A")%</td>
                                            <td>@(quiz.MaxAttempts?.ToString() ?? "Unlimited")</td>
                                            <td>
                                                @if ((quiz.QuizQuestions?.Count ?? 0) == 0)
                                                {
                                                    <span class="badge bg-warning text-dark small">0 questions</span>
                                                    <br>

                                                    <small class="text-muted">Click + to add sample questions</small>
                                                }
                                                else
                                                {
                                                    <span class="badge bg-info small">@(quiz.QuizQuestions?.Count ?? 0) questions</span>
                                                }
                                            </td>
                                            <td>
                                                <div class="btn-group btn-group-sm" role="group">
                                                    <button class="btn btn-outline-primary btn-sm" onclick="editQuiz(@quiz.QuizId)">
                                                        <i class="fas fa-edit"></i>
                                                    </button>
                                                    <button class="btn btn-outline-info btn-sm" onclick="manageQuestions(@quiz.QuizId)">
                                                        <i class="fas fa-list"></i>
                                                    </button>
                                                    <button class="btn btn-outline-success btn-sm" onclick="addSampleQuestions(@quiz.QuizId)">
                                                        <i class="fas fa-plus"></i>
                                                    </button>
                                                    <button class="btn btn-outline-danger btn-sm" onclick="deleteQuiz(@quiz.QuizId)">
                                                        <i class="fas fa-trash"></i>
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Add Quiz Modal -->
<div class="modal fade" id="addQuizModal" tabindex="-1" aria-labelledby="addQuizModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header py-2">
                <h6 class="modal-title" id="addQuizModalLabel">
                    <i class="fas fa-plus me-2"></i>Add New Quiz
                </h6>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form method="post" asp-page-handler="AddQuiz" id="addQuizForm" novalidate>
                @Html.AntiForgeryToken()
                <div class="modal-body p-3">
                    <div class="row g-2">
                        <div class="col-12 col-md-6">
                            <label for="courseId" class="form-label small">Course <span class="text-danger">*</span></label>
                            <select class="form-select form-select-sm" id="courseId" name="CourseId" onchange="loadLessons()" required>
                                <option value="">Select Course</option>
                                @foreach (var course in Model.Courses)
                                {
                                    <option value="@course.CourseId">@course.Title</option>
                                }
                            </select>
                            <div class="invalid-feedback">Please select a course.</div>
                        </div>
                        <div class="col-12 col-md-6">
                            <label for="lessonId" class="form-label small">Lesson <span class="text-danger">*</span></label>
                            <select class="form-select form-select-sm" id="lessonId" name="LessonId" required disabled>
                                <option value="">Select Course First</option>
                            </select>
                            <div class="invalid-feedback">Please select a lesson.</div>
                        </div>
                    </div>
                    <div class="mt-2">
                        <label for="title" class="form-label small">Quiz Title <span class="text-danger">*</span></label>
                        <input type="text" class="form-control form-control-sm" id="title" name="Title" required>
                    </div>
                    <div class="mt-2">
                        <label for="description" class="form-label small">Description</label>
                        <textarea class="form-control form-control-sm" id="description" name="Description" rows="2"></textarea>
                    </div>
                    <div class="row g-2 mt-1">
                        <div class="col-12 col-md-4">
                            <label for="timeLimit" class="form-label small">Time Limit (minutes)</label>
                            <input type="number" class="form-control form-control-sm" id="timeLimit" name="TimeLimit" min="1">
                            <small class="text-muted">Leave empty for no limit</small>
                        </div>
                        <div class="col-12 col-md-4">
                            <label for="passingScore" class="form-label small">Passing Score (%)</label>
                            <input type="number" class="form-control form-control-sm" id="passingScore" name="PassingScore" min="0" max="100" value="70">
                        </div>
                        <div class="col-12 col-md-4">
                            <label for="maxAttempts" class="form-label small">Max Attempts</label>
                            <input type="number" class="form-control form-control-sm" id="maxAttempts" name="MaxAttempts" min="1" value="3">
                        </div>
                    </div>
                    <div class="mt-2">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="isRandomized" name="IsRandomized" value="true">
                            <label class="form-check-label small" for="isRandomized">Randomize Question Order</label>
                        </div>
                    </div>
                </div>
                <div class="modal-footer py-2">
                    <button type="button" class="btn btn-secondary btn-sm" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary btn-sm" id="saveQuizBtn">
                        <i class="fas fa-save me-1"></i>Save
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<style>
    .table-sm th, .table-sm td {
        padding: 0.5rem;
        font-size: 0.875rem;
    }

    .badge.small {
        font-size: 0.7rem;
    }

    .btn-sm {
        padding: 0.25rem 0.5rem;
        font-size: 0.8rem;
    }

    .form-select-sm, .form-control-sm {
        font-size: 0.8rem;
        padding: 0.25rem 0.5rem;
    }

    .form-label.small {
        font-size: 0.8rem;
        font-weight: 600;
        margin-bottom: 0.25rem;
    }

    .modal-dialog {
        max-width: 600px;
    }

    .modal-body {
        max-height: 70vh;
        overflow-y: auto;
    }

    .invalid-feedback {
        font-size: 0.8rem;
    }

    .text-muted {
        font-size: 0.8rem;
    }
</style>

<script>
    function loadLessons() {
        const courseId = document.getElementById('courseId').value;
        const lessonSelect = document.getElementById('lessonId');

        lessonSelect.innerHTML = '<option value="">Select Lesson</option>';
        lessonSelect.disabled = true;

        if (courseId) {
            const courseLessons = [];
            @foreach (var lesson in Model.Lessons)
            {
                    <text>
                    if (@lesson.CourseId == courseId) {
                        courseLessons.push({
                            lessonId: @lesson.LessonId,
                            title: '@Html.Raw(lesson.Title.Replace("'", "\\'"))'
                        });
                    }
                    </text>
            }

            if (courseLessons.length > 0) {
                courseLessons.forEach(lesson => {
                    const option = document.createElement('option');
                    option.value = lesson.lessonId;
                    option.textContent = lesson.title;
                    lessonSelect.appendChild(option);
                });
                lessonSelect.disabled = false;
            } else {
                lessonSelect.innerHTML = '<option value="">No lessons available for this course</option>';
                lessonSelect.disabled = true;
            }
        }
    }

    function filterQuizzes() {
        const courseFilter = document.getElementById('courseFilter').value;
        const lessonFilter = document.getElementById('lessonFilter').value;
        const rows = document.querySelectorAll('tbody tr');

        rows.forEach(row => {
            const courseId = row.getAttribute('data-course-id');
            const lessonId = row.getAttribute('data-lesson-id');

            const courseMatch = !courseFilter || courseId === courseFilter;
            const lessonMatch = !lessonFilter || lessonId === lessonFilter;

            if (courseMatch && lessonMatch) {
                row.style.display = '';
            } else {
                row.style.display = 'none';
            }
        });
    }

    function editQuiz(quizId) {
        alert('Edit quiz ' + quizId + ' - This would open an edit modal.');
    }

    function manageQuestions(quizId) {
        window.location.href = '/Admin/QuizQuestions/' + quizId;
    }

    function addSampleQuestions(quizId) {
        if (confirm('Are you sure you want to add sample questions to this quiz? This will overwrite existing questions.')) {
            var form = document.createElement('form');
            form.method = 'POST';
            form.action = '?handler=AddSampleQuestions&quizId=' + quizId;

            var token = document.querySelector('input[name="__RequestVerificationToken"]').value;
            var tokenInput = document.createElement('input');
            tokenInput.type = 'hidden';
            tokenInput.name = '__RequestVerificationToken';
            tokenInput.value = token;
            form.appendChild(tokenInput);

            document.body.appendChild(form);
            form.submit();
        }
    }

    function deleteQuiz(quizId) {
        if (confirm('Are you sure you want to delete this quiz? This will also delete all associated questions.')) {
            var form = document.createElement('form');
            form.method = 'POST';
            form.action = '?handler=DeleteQuiz&quizId=' + quizId;

            var token = document.querySelector('input[name="__RequestVerificationToken"]').value;
            var tokenInput = document.createElement('input');
            tokenInput.type = 'hidden';
            tokenInput.name = '__RequestVerificationToken';
            tokenInput.value = token;
            form.appendChild(tokenInput);

            document.body.appendChild(form);
            form.submit();
        }
    }

    document.getElementById('addQuizForm').addEventListener('submit', function(event) {
        if (!this.checkValidity()) {
            event.preventDefault();
            event.stopPropagation();
        }

        this.classList.add('was-validated');

        const lessonId = document.getElementById('lessonId').value;
        if (!lessonId) {
            event.preventDefault();
            document.getElementById('lessonId').setCustomValidity('Please select a lesson');
        } else {
            document.getElementById('lessonId').setCustomValidity('');
        }

        if (this.checkValidity()) {
            const saveBtn = document.getElementById('saveQuizBtn');
            saveBtn.disabled = true;
            saveBtn.innerHTML = '<i class="fas fa-spinner fa-spin me-1"></i>Saving...';
        }
    });

    document.getElementById('addQuizModal').addEventListener('hidden.bs.modal', function() {
        const form = document.getElementById('addQuizForm');
        form.reset();
        form.classList.remove('was-validated');
        document.getElementById('lessonId').innerHTML = '<option value="">Select Course First</option>';
        document.getElementById('lessonId').disabled = true;
    });

    document.addEventListener('DOMContentLoaded', function() {
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl);
        });
    });
</script>