@page
@model RazorPages_PRN222.Pages.Admin.LessonsModel
@{
    ViewData["Title"] = "Manage Lessons";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2 class="mb-0">
                    <i class="fas fa-book-open me-2"></i>Manage Lessons
                </h2>
                <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addLessonModal">
                    <i class="fas fa-plus me-1"></i>Add New Lesson
                </button>
            </div>

            <!-- Course Filter -->
            <div class="card mb-4">
                <div class="card-body">
                    <div class="row g-3">
                        <div class="col-12 col-md-6">
                            <label for="courseFilter" class="form-label">Filter by Course:</label>
                            <select id="courseFilter" class="form-select" onchange="filterLessons()">
                                <option value="">All Courses</option>
                                @foreach (var course in Model.Courses)
                                {
                                    <option value="@course.CourseId">@course.Title</option>
                                }
                            </select>
                        </div>
                        <div class="col-12 col-md-6">
                            <label for="lessonTypeFilter" class="form-label">Filter by Type:</label>
                            <select id="lessonTypeFilter" class="form-select" onchange="filterLessons()">
                                <option value="">All Types</option>
                                <option value="Video">Video</option>
                                <option value="Article">Article</option>
                                <option value="Quiz">Quiz</option>
                                <option value="Assignment">Assignment</option>
                                <option value="Download">Download</option>
                            </select>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Lessons Table -->
            <div class="card">
                <div class="card-body">
                    @if (!Model.Lessons.Any())
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-book-open fa-3x text-muted mb-3"></i>
                            <h4>No lessons yet</h4>
                            <p class="text-muted">Create your first lesson to get started.</p>
                            <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addLessonModal">
                                <i class="fas fa-plus me-1"></i>Add First Lesson
                            </button>
                        </div>
                    }
                    else
                    {
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead class="table-dark">
                                    <tr>
                                        <th>Title</th>
                                        <th>Course</th>
                                        <th>Type</th>
                                        <th>Duration</th>
                                        <th>Sort Order</th>
                                        <th>Preview</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var lesson in Model.Lessons.OrderBy(l => l.CourseId).ThenBy(l => l.SortOrder))
                                    {
                                        <tr data-course-id="@lesson.CourseId" data-lesson-type="@lesson.LessonType">
                                            <td>
                                                <strong>@lesson.Title</strong>
                                                @if (!string.IsNullOrEmpty(lesson.Description))
                                                {
                                                    <br>
                                        
                                                    <small class="text-muted">@(lesson.Description.Length > 50 ? lesson.Description.Substring(0, 50) + "..." : lesson.Description)</small>
                                                }
                                        </td>
                                        <td>@(lesson.Course?.Title ?? "Unknown Course")</td>
                                        <td>
                                            <span class="badge bg-secondary">@lesson.LessonType</span>
                                        </td>
                                        <td>@(lesson.Duration?.ToString() ?? "N/A") min</td>
                                        <td>@lesson.SortOrder</td>
                                            <td>
                                                @if (lesson.IsPreview == true)
                                                {
                                                    <span class="badge bg-warning text-dark">Preview</span>
                                                }
                                                else
                                                {
                                                    <span class="badge bg-secondary">Locked</span>
                                                }
                                            </td>
                                    <td>
                                        <div class="btn-group btn-group-sm" role="group">
                                            <button class="btn btn-outline-primary" onclick="editLesson(@lesson.LessonId)">
                                                <i class="fas fa-edit"></i>
                                            </button>
                                            <button class="btn btn-outline-danger" onclick="deleteLesson(@lesson.LessonId)">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                                                                }
                                </tbody>
                            </table>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Add Lesson Modal -->
<div class="modal fade" id="addLessonModal" tabindex="-1" aria-labelledby="addLessonModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addLessonModalLabel">
                    <i class="fas fa-plus me-2"></i>Add New Lesson
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form method="post" asp-page-handler="AddLesson" id="addLessonForm" novalidate>
                @Html.AntiForgeryToken()
                <div class="modal-body">
                    <div class="row g-3">
                        <div class="col-12 col-md-6">
                            <div class="mb-3">
                                <label for="courseId" class="form-label">Course <span class="text-danger">*</span></label>
                                <select class="form-select" id="courseId" name="CourseId" required>
                                    <option value="">Select Course</option>
                                    @foreach (var course in Model.Courses)
                                    {
                                        <option value="@course.CourseId">@course.Title</option>
                                    }
                                </select>
                                <div class="invalid-feedback">Please select a course.</div>
                            </div>
                        </div>
                        <div class="col-12 col-md-6">
                            <div class="mb-3">
                                <label for="lessonType" class="form-label">Lesson Type <span class="text-danger">*</span></label>
                                <select class="form-select" id="lessonType" name="LessonType" required>
                                    <option value="">Select Type</option>
                                    <option value="Video">Video</option>
                                    <option value="Article">Article</option>
                                    <option value="Quiz">Quiz</option>
                                    <option value="Assignment">Assignment</option>
                                    <option value="Download">Download</option>
                                </select>
                                <div class="invalid-feedback">Please select a lesson type.</div>
                            </div>
                        </div>
                    </div>
                    <div class="mb-3">
                        <label for="title" class="form-label">Title</label>
                        <input type="text" class="form-control" id="title" name="Title" required>
                    </div>
                    <div class="mb-3">
                        <label for="description" class="form-label">Description</label>
                        <textarea class="form-control" id="description" name="Description" rows="3"></textarea>
                    </div>
                    <div class="row g-3">
                        <div class="col-12 col-md-6 col-lg-4">
                            <div class="mb-3">
                                <label for="duration" class="form-label">Duration (minutes)</label>
                                <input type="number" class="form-control" id="duration" name="Duration" min="1">
                                <small class="text-muted">Optional - estimated time to complete</small>
                            </div>
                        </div>
                        <div class="col-12 col-md-6 col-lg-4">
                            <div class="mb-3">
                                <label for="sortOrder" class="form-label">Sort Order <span class="text-danger">*</span></label>
                                <input type="number" class="form-control" id="sortOrder" name="SortOrder" value="1" min="1" required>
                                <div class="invalid-feedback">Please enter a valid sort order.</div>
                            </div>
                        </div>
                        <div class="col-12 col-md-6 col-lg-4">
                            <div class="mb-3">
                                <label for="contentUrl" class="form-label">Content URL</label>
                                <input type="url" class="form-control" id="contentUrl" name="ContentUrl">
                                <small class="text-muted">Optional - link to video/document</small>
                            </div>
                        </div>
                    </div>
                    <div class="mb-3">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="isPreview" name="IsPreview" value="true">
                            <label class="form-check-label" for="isPreview">
                                Available as Preview
                            </label>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary" id="saveLessonBtn">
                        <i class="fas fa-save me-1"></i>Save Lesson
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Edit Lesson Modal -->
<div class="modal fade" id="editLessonModal" tabindex="-1" aria-labelledby="editLessonModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editLessonModalLabel">
                    <i class="fas fa-edit me-2"></i>Edit Lesson
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form method="post" asp-page-handler="UpdateLesson" id="editLessonForm" novalidate>
                @Html.AntiForgeryToken()
                <input type="hidden" id="editLessonId" name="LessonId" />
                <div class="modal-body">
                    <div class="row g-3">
                        <div class="col-12 col-md-6">
                            <div class="mb-3">
                                <label for="editCourseId" class="form-label">Course <span class="text-danger">*</span></label>
                                <select class="form-select" id="editCourseId" name="CourseId" required>
                                    <option value="">Select Course</option>
                                    @foreach (var course in Model.Courses)
                                    {
                                        <option value="@course.CourseId">@course.Title</option>
                                    }
                                </select>
                                <div class="invalid-feedback">Please select a course.</div>
                            </div>
                        </div>
                        <div class="col-12 col-md-6">
                            <div class="mb-3">
                                <label for="editLessonType" class="form-label">Lesson Type <span class="text-danger">*</span></label>
                                <select class="form-select" id="editLessonType" name="LessonType" required>
                                    <option value="">Select Type</option>
                                    <option value="Video">Video</option>
                                    <option value="Article">Article</option>
                                    <option value="Quiz">Quiz</option>
                                    <option value="Assignment">Assignment</option>
                                    <option value="Download">Download</option>
                                </select>
                                <div class="invalid-feedback">Please select a lesson type.</div>
                            </div>
                        </div>
                    </div>
                    <div class="mb-3">
                        <label for="editTitle" class="form-label">Title</label>
                        <input type="text" class="form-control" id="editTitle" name="Title" required>
                    </div>
                    <div class="mb-3">
                        <label for="editDescription" class="form-label">Description</label>
                        <textarea class="form-control" id="editDescription" name="Description" rows="3"></textarea>
                    </div>
                    <div class="row g-3">
                        <div class="col-12 col-md-6 col-lg-4">
                            <div class="mb-3">
                                <label for="editDuration" class="form-label">Duration (minutes)</label>
                                <input type="number" class="form-control" id="editDuration" name="Duration" min="1">
                                <small class="text-muted">Optional - estimated time to complete</small>
                            </div>
                        </div>
                        <div class="col-12 col-md-6 col-lg-4">
                            <div class="mb-3">
                                <label for="editSortOrder" class="form-label">Sort Order <span class="text-danger">*</span></label>
                                <input type="number" class="form-control" id="editSortOrder" name="SortOrder" min="1" required>
                                <div class="invalid-feedback">Please enter a valid sort order.</div>
                            </div>
                        </div>
                        <div class="col-12 col-md-6 col-lg-4">
                            <div class="mb-3">
                                <label for="editContentUrl" class="form-label">Content URL</label>
                                <input type="url" class="form-control" id="editContentUrl" name="ContentUrl">
                                <small class="text-muted">Optional - link to video/document</small>
                            </div>
                        </div>
                    </div>
                    <div class="mb-3">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="editIsPreview" name="IsPreview" value="true">
                            <label class="form-check-label" for="editIsPreview">
                                Available as Preview
                            </label>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary" id="updateLessonBtn">
                        <i class="fas fa-save me-1"></i>Update Lesson
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<style>
    .table th {
        font-weight: 600;
        background-color: #343a40;
        color: white;
    }

    .btn-group-sm .btn {
        padding: 0.25rem 0.5rem;
        font-size: 0.875rem;
    }

    .badge {
        font-size: 0.75rem;
    }

    .form-label .text-danger {
        font-size: 0.875rem;
    }

    .invalid-feedback {
        font-size: 0.875rem;
    }

    .text-muted {
        font-size: 0.875rem;
    }

    /* Responsive improvements */
    /* media (max-width: 768px) {
        .btn-group-sm .btn

    {
        padding: 0.375rem 0.75rem;
        font-size: 1rem;
    }

    .table-responsive {
        font-size: 0.875rem;
    }

    } */

    /* Loading state */
    .btn:disabled {
        cursor: not-allowed;
        opacity: 0.65;
    }

    /* Ensure badges have proper spacing and contrast */
    .badge.bg-warning {
        background-color: #ffc107 !important;
        color: #212529 !important;
    }

    .badge.bg-secondary {
        background-color: #6c757d !important;
        color: #fff !important;
    }

    /* Modal form alignment */
    .modal-body .row {
        margin-bottom: 1rem;
    }

    .modal-body .mb-3 {
        margin-bottom: 1rem !important;
    }

    /* Button group alignment */
    .btn-group {
        gap: 0.25rem;
    }
</style>

@section Scripts {
    <script>
        function filterLessons() {
            const courseFilter = document.getElementById('courseFilter').value;
            const typeFilter = document.getElementById('lessonTypeFilter').value;
            const rows = document.querySelectorAll('tbody tr');

            rows.forEach(row => {
                const courseId = row.getAttribute('data-course-id');
                const lessonType = row.getAttribute('data-lesson-type');

                const courseMatch = !courseFilter || courseId === courseFilter;
                const typeMatch = !typeFilter || lessonType === typeFilter;

                if (courseMatch && typeMatch) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            });
        }

                function editLesson(lessonId) {
            console.log(`Fetching lesson ID: ${lessonId}`);
            fetch(`/Admin/Lessons?handler=Lesson&id=${lessonId}`, {
                method: 'GET',
                headers: {
                    'Accept': 'application/json'
                }
            })
            .then(response => {
                console.log(`Response status: ${response.status}`);
                if (!response.ok) {
                    throw new Error(`HTTP error! Status: ${response.status}`);
                }
                return response.json();
            })
            .then(data => {
                console.log('Received lesson data:', data);
                // Populate form fields
                document.getElementById('editLessonId').value = data.lessonId || '';
                document.getElementById('editCourseId').value = data.courseId || '';
                document.getElementById('editTitle').value = data.title || '';
                document.getElementById('editDescription').value = data.description || '';
                document.getElementById('editLessonType').value = data.lessonType || '';
                document.getElementById('editDuration').value = data.duration || '';
                document.getElementById('editSortOrder').value = data.sortOrder || '';
                document.getElementById('editContentUrl').value = data.contentUrl || '';
                document.getElementById('editIsPreview').checked = data.isPreview ?? false;

                // Show the modal
                const modal = new bootstrap.Modal(document.getElementById('editLessonModal'));
                modal.show();
            })
            .catch(error => {
                console.error('Error fetching lesson data:', error);
                // Display error in UI
                const errorDiv = document.createElement('div');
                errorDiv.className = 'alert alert-danger mt-3';
                errorDiv.textContent = `Failed to load lesson ${lessonId}. Please try again or check the console.`;
                document.querySelector('.container').prepend(errorDiv);
            });
        }

        function deleteLesson(lessonId) {
            if (confirm('Are you sure you want to delete this lesson?')) {
                var form = document.createElement('form');
                form.method = 'POST';
                form.action = '?handler=DeleteLesson&lessonId=' + lessonId;

                var token = document.querySelector('input[name="__RequestVerificationToken"]').value;
                var tokenInput = document.createElement('input');
                tokenInput.type = 'hidden';
                tokenInput.name = '__RequestVerificationToken';
                tokenInput.value = token;
                form.appendChild(tokenInput);

                document.body.appendChild(form);
                form.submit();
            }
        }

        // Form validation for Add Lesson
        document.getElementById('addLessonForm').addEventListener('submit', function(event) {
            if (!this.checkValidity()) {
                event.preventDefault();
                event.stopPropagation();
            }

            this.classList.add('was-validated');

            if (this.checkValidity()) {
                const saveBtn = document.getElementById('saveLessonBtn');
                saveBtn.disabled = true;
                saveBtn.innerHTML = '<i class="fas fa-spinner fa-spin me-1"></i>Saving...';
            }
        });

        // Form validation for Edit Lesson
        document.getElementById('editLessonForm').addEventListener('submit', function(event) {
            if (!this.checkValidity()) {
                event.preventDefault();
                event.stopPropagation();
            }

            this.classList.add('was-validated');

            if (this.checkValidity()) {
                const updateBtn = document.getElementById('updateLessonBtn');
                updateBtn.disabled = true;
                updateBtn.innerHTML = '<i class="fas fa-spinner fa-spin me-1"></i>Updating...';
            }
        });

        // Reset forms when modals are closed
        document.getElementById('addLessonModal').addEventListener('hidden.bs.modal', function() {
            const form = document.getElementById('addLessonForm');
            form.reset();
            form.classList.remove('was-validated');
            const saveBtn = document.getElementById('saveLessonBtn');
            saveBtn.disabled = false;
            saveBtn.innerHTML = '<i class="fas fa-save me-1"></i>Save Lesson';
        });

        document.getElementById('editLessonModal').addEventListener('hidden.bs.modal', function() {
            const form = document.getElementById('editLessonForm');
            form.reset();
            form.classList.remove('was-validated');
            const updateBtn = document.getElementById('updateLessonBtn');
            updateBtn.disabled = false;
            updateBtn.innerHTML = '<i class="fas fa-save me-1"></i>Update Lesson';
        });
    </script>
}